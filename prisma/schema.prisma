// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
}

model User {
  id                    String   @id @default(cuid())
  email                 String   @unique
  name                  String
  employeeId            String   @unique @map("employee_id")
  phone                 String?
  password              String
  role                  UserRole @default(USER)
  isActive              Boolean  @default(true) @map("is_active")
  division              Division @default(A)
  enablePasswordChanges Boolean  @default(false) @map("enable_password_changes")
  createdAt             DateTime @default(now()) @map("created_at")
  updatedAt             DateTime @updatedAt @map("updated_at")
  deletedAt             DateTime? @map("deleted_at")
  // Relations
  vehicleRequests VehicleRequest[]
  createdRequests VehicleRequest[] @relation("CreatedBy")

  @@map("users")
}

model Vehicle {
  id           String        @id @default(cuid())
  name         String
  plate        String        @unique
  type         VehicleType
  year         String
  image        String?
  isActive     Boolean       @default(true) @map("is_active")
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")

  // Relations
  requests     VehicleRequest[]

  @@map("vehicles")
}

model VehicleRequest {
  id              String            @id @default(cuid())
  userId          String            @map("user_id")
  vehicleId       String            @map("vehicle_id")
  createdById     String            @map("created_by_id")
  destination     String
  startDateTime   DateTime          @map("start_date_time")
  endDateTime     DateTime          @map("end_date_time")
  status          RequestStatus     @default(PENDING)
  approvedAt      DateTime?         @map("approved_at")
  rejectedAt      DateTime?         @map("rejected_at")
  rejectionReason String?           @map("rejection_reason")
  checkOutAt      DateTime?         @map("check_out_at")
  isActive        Boolean           @default(true) @map("is_active")
  deletedAt       DateTime?         @map("deleted_at")
  createdAt       DateTime          @default(now()) @map("created_at")
  updatedAt       DateTime          @updatedAt @map("updated_at")

  // Relations
  user        User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  vehicle     Vehicle @relation(fields: [vehicleId], references: [id], onDelete: Cascade)
  createdBy   User    @relation("CreatedBy", fields: [createdById], references: [id], onDelete: Cascade)

  @@map("vehicle_requests")
}

enum UserRole {
  ADMIN
  USER
  SUPER_ADMIN
}

enum VehicleType {
  BENSIN
  DIESEL
  ELECTRIC
}

enum RequestStatus {
  PENDING
  APPROVED
  REJECTED
  IN_USE
  COMPLETED
  CANCELLED
} 

enum Division {
  A
  B
  C
  D
  E
  F
  G
  H
  I
  J
  K
}